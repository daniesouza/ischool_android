package br.com.marrs.ischool.webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 7/6/2014 12:42:21 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.text.SimpleDateFormat;
import java.util.Hashtable;
import java.util.Locale;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import br.com.marrs.ischool.entidades.Cliente;
import br.com.marrs.ischool.util.Crypto;


public class ClienteCrypt implements KvmSerializable {
    
    public VectorByte ativo;
    public VectorByte cnpj;
    public VectorByte dtCad;
    public VectorByte email;
    public VectorByte endereco;
    public VectorByte idCliente;
    public VectorByte nome;
    public VectorByte razaoSocial;
    public VectorByte telefone;
    
    public ClienteCrypt(){}
    
    public ClienteCrypt(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ativo"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("ativo");
            ativo = new VectorByte(j);
        }
        if (soapObject.hasProperty("cnpj"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("cnpj");
            cnpj = new VectorByte(j);
        }
        if (soapObject.hasProperty("dtCad"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dtCad");
            dtCad = new VectorByte(j);
        }
        if (soapObject.hasProperty("email"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("email");
            email = new VectorByte(j);
        }
        if (soapObject.hasProperty("endereco"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("endereco");
            endereco = new VectorByte(j);
        }
        if (soapObject.hasProperty("idCliente"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("idCliente");
            idCliente = new VectorByte(j);
        }
        if (soapObject.hasProperty("nome"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("nome");
            nome = new VectorByte(j);
        }
        if (soapObject.hasProperty("razaoSocial"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("razaoSocial");
            razaoSocial = new VectorByte(j);
        }
        if (soapObject.hasProperty("telefone"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("telefone");
            telefone = new VectorByte(j);
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return ativo.toString();
            case 1:
                return cnpj.toString();
            case 2:
                return dtCad.toString();
            case 3:
                return email.toString();
            case 4:
                return endereco.toString();
            case 5:
                return idCliente.toString();
            case 6:
                return nome.toString();
            case 7:
                return razaoSocial.toString();
            case 8:
                return telefone.toString();
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 9;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ativo";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "cnpj";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dtCad";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "email";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "endereco";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "idCliente";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nome";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "razaoSocial";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "telefone";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    

    
    
    public Cliente decriptarCliente() throws Exception{
    	
    	Cliente cliente = new Cliente();
    	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS",Locale.US);
    	
    	cliente.setId(this.idCliente == null ? null : Long.valueOf(new String(Crypto.decrypt(this.idCliente.toBytes()))));
    	
    	cliente.setAtivo(this.ativo == null ? null : Boolean.valueOf(new String(Crypto.decrypt(this.ativo.toBytes()))));
    	cliente.setCnpj(this.cnpj == null ? null : Long.valueOf(new String(Crypto.decrypt(this.cnpj.toBytes()))));
    	cliente.setDtCad(this.dtCad == null ? null : dateFormat.parse(new String(Crypto.decrypt(this.dtCad.toBytes()))));
    	cliente.setEmail(this.email == null ? null : new String(Crypto.decrypt(this.email.toBytes())));  	
    	cliente.setEndereco(this.endereco == null ? null : new String(Crypto.decrypt(this.endereco.toBytes())));  	
    	cliente.setNome(this.nome == null ? null : new String(Crypto.decrypt(this.nome.toBytes())));  	
    	cliente.setRazaoSocial(this.razaoSocial == null ? null : new String(Crypto.decrypt(this.razaoSocial.toBytes())));  	
    	cliente.setTelefone(this.telefone == null ? null : new String(Crypto.decrypt(this.telefone.toBytes())));  	
    	
    	return cliente;
    }
}
