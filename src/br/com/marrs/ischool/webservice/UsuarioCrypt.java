package br.com.marrs.ischool.webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 7/6/2014 12:42:21 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.text.SimpleDateFormat;
import java.util.Hashtable;
import java.util.Locale;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import br.com.marrs.ischool.entidades.Usuario;
import br.com.marrs.ischool.util.Crypto;


public class UsuarioCrypt implements KvmSerializable {
    
    public VectoralunoCrypt alunos;
    public VectorByte ativo;
    public VectorByte autoridade;
    public ClienteCrypt cliente;
    public VectorByte cpf;
    public VectorByte dataAcessoAtual;
    public VectorByte dataSenha;
    public VectorByte dataUltimoAcesso;
    public VectorByte dataValidadeHash;
    public VectorByte dtCad;
    public VectorByte email;
    public VectorByte endereco;
    public VectorByte idUsuario;
    public VectorByte nome;
    public VectorByte rg;
    public VectorByte securityHashKey;
    public VectorByte senha;
    public VectorByte telefone;
    public VectorByte tentativasSenhaIncorreta;
    public VectorByte trocarSenha;
    public VectorByte usuario;
    public VectorByte dataAtualizacao; 
    public VectorByte deviceId;
    public VectorByte semClassesAtribuidas;
    
    
    public UsuarioCrypt(){}
    
    public UsuarioCrypt(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("alunos"))
        {
        	PropertyInfo prop = new PropertyInfo();
        	
        	SoapObject j = new SoapObject();
           
        	for(int i=0;i<soapObject.getPropertyCount();i++){
        		
        		soapObject.getPropertyInfo(i, prop);
        		
        		if(prop.getName().equals("alunos")){
        			
        			j.addProperty("alunos",prop.getValue());
        		}else{
        			break;
        		}
       		 
        	}

            alunos = new VectoralunoCrypt(j);
        }
        if (soapObject.hasProperty("ativo"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("ativo");
            ativo = new VectorByte(j);
        }
        if (soapObject.hasProperty("autoridade"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("autoridade");
            autoridade = new VectorByte(j);
        }
        if (soapObject.hasProperty("cliente"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("cliente");
            cliente =  new ClienteCrypt (j);
            
        }
        if (soapObject.hasProperty("cpf"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("cpf");
            cpf = new VectorByte(j);
        }
        if (soapObject.hasProperty("dataAcessoAtual"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dataAcessoAtual");
            dataAcessoAtual = new VectorByte(j);
        }
        if (soapObject.hasProperty("dataSenha"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dataSenha");
            dataSenha = new VectorByte(j);
        }
        if (soapObject.hasProperty("dataUltimoAcesso"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dataUltimoAcesso");
            dataUltimoAcesso = new VectorByte(j);
        }
        if (soapObject.hasProperty("dataValidadeHash"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dataValidadeHash");
            dataValidadeHash = new VectorByte(j);
        }
        if (soapObject.hasProperty("dtCad"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dtCad");
            dtCad = new VectorByte(j);
        }
        if (soapObject.hasProperty("email"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("email");
            email = new VectorByte(j);
        }
        if (soapObject.hasProperty("endereco"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("endereco");
            endereco = new VectorByte(j);
        }
        if (soapObject.hasProperty("idUsuario"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("idUsuario");
            idUsuario = new VectorByte(j);
        }
        if (soapObject.hasProperty("nome"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("nome");
            nome = new VectorByte(j);
        }
        if (soapObject.hasProperty("rg"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("rg");
            rg = new VectorByte(j);
        }
        if (soapObject.hasProperty("securityHashKey"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("securityHashKey");
            securityHashKey = new VectorByte(j);
        }
        if (soapObject.hasProperty("senha"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("senha");
            senha = new VectorByte(j);
        }
        if (soapObject.hasProperty("telefone"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("telefone");
            telefone = new VectorByte(j);
        }
        if (soapObject.hasProperty("tentativasSenhaIncorreta"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("tentativasSenhaIncorreta");
            tentativasSenhaIncorreta = new VectorByte(j);
        }
        if (soapObject.hasProperty("trocarSenha"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("trocarSenha");
            trocarSenha = new VectorByte(j);
        }
        if (soapObject.hasProperty("usuario"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("usuario");
            usuario = new VectorByte(j);
        }
        if (soapObject.hasProperty("dataAtualizacao"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("dataAtualizacao");
            dataAtualizacao = new VectorByte(j);
        } 
        if (soapObject.hasProperty("deviceId"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("deviceId");
            deviceId = new VectorByte(j);
        }   
        if (soapObject.hasProperty("semClassesAtribuidas"))
        {
            SoapPrimitive j = (SoapPrimitive)soapObject.getProperty("semClassesAtribuidas");
            semClassesAtribuidas = new VectorByte(j);
        } 
        
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return alunos;
            case 1:
                return ativo.toString();
            case 2:
                return autoridade.toString();
            case 3:
                return cliente;
            case 4:
                return cpf.toString();
            case 5:
                return dataAcessoAtual.toString();
            case 6:
                return dataSenha.toString();
            case 7:
                return dataUltimoAcesso.toString();
            case 8:
                return dataValidadeHash.toString();
            case 9:
                return dtCad.toString();
            case 10:
                return email.toString();
            case 11:
                return endereco.toString();
            case 12:
                return idUsuario.toString();
            case 13:
                return nome.toString();
            case 14:
                return rg.toString();
            case 15:
                return securityHashKey.toString();
            case 16:
                return senha.toString();
            case 17:
                return telefone.toString();
            case 18:
                return tentativasSenhaIncorreta.toString();
            case 19:
                return trocarSenha.toString();
            case 20:
                return usuario.toString();
            case 21:
                return dataAtualizacao.toString();                
            case 22:
                return deviceId.toString(); 
            case 23:
                return semClassesAtribuidas.toString();                 
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 24;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "alunos";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ativo";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "autoridade";
                break;
            case 3:
                info.type = ClienteCrypt.class;
                info.name = "cliente";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "cpf";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dataAcessoAtual";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dataSenha";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dataUltimoAcesso";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dataValidadeHash";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dtCad";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "email";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "endereco";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "idUsuario";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nome";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "rg";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "securityHashKey";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "senha";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "telefone";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "tentativasSenhaIncorreta";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "trocarSenha";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "usuario";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "dataAtualizacao";
                break; 
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "deviceId";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "semClassesAtribuidas";
                break;                
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
    
    public Usuario decriptarUsuario() throws Exception{
    	Usuario usuario = new Usuario();
    	
    	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS",Locale.US);
    	
    	usuario.setId(this.idUsuario == null ? null : Long.valueOf(new String(Crypto.decrypt(this.idUsuario.toBytes()))));
    	usuario.setAtivo(this.ativo == null ? null : Boolean.valueOf(new String(Crypto.decrypt(this.ativo.toBytes()))));
    	usuario.setAutoridade(this.autoridade == null ? null : new String(Crypto.decrypt(this.autoridade.toBytes())));
    	
    	usuario.setCpf(this.cpf == null ? null : Long.valueOf(new String(Crypto.decrypt(this.cpf.toBytes()))));
    	usuario.setDataAcessoAtual(this.dataAcessoAtual == null ? null : dateFormat.parse(new String(Crypto.decrypt(this.dataAcessoAtual.toBytes()))));
    	usuario.setDataSenha(this.dataSenha == null ? null : dateFormat.parse(new String(Crypto.decrypt(this.dataSenha.toBytes()))));
    	usuario.setDataUltimoAcesso(this.dataUltimoAcesso == null ? null : dateFormat.parse(new String(Crypto.decrypt(this.dataUltimoAcesso.toBytes()))));
    	usuario.setDataValidadeHash(this.dataValidadeHash == null ? null : Long.valueOf(new String(Crypto.decrypt(this.dataValidadeHash.toBytes()))));
    	usuario.setDtCad(this.dtCad == null ? null : dateFormat.parse((new String(Crypto.decrypt(this.dtCad.toBytes())))));
    	usuario.setEmail(this.email == null ? null : new String(Crypto.decrypt(this.email.toBytes())));
    	usuario.setEndereco(this.endereco == null ? null : new String(Crypto.decrypt(this.endereco.toBytes())));
    	usuario.setNome(this.nome == null ? null : new String(Crypto.decrypt(this.nome.toBytes())));
    	usuario.setRg(this.rg == null ? null : new String(Crypto.decrypt(this.rg.toBytes())));
    	usuario.setTelefone(this.telefone == null ? null : new String(Crypto.decrypt(this.telefone.toBytes())));
    	usuario.setTentativasSenhaIncorreta(this.tentativasSenhaIncorreta == null ? null : Byte.valueOf(new String(Crypto.decrypt(this.tentativasSenhaIncorreta.toBytes()))));
    	usuario.setTrocarSenha(this.trocarSenha == null ? null : Boolean.valueOf(new String(Crypto.decrypt(this.trocarSenha.toBytes()))));
    	usuario.setUsuario(this.usuario == null ? null : new String(Crypto.decrypt(this.usuario.toBytes())));  	
    	usuario.setSecurityHashKey(new String(Crypto.decrypt(this.securityHashKey.toBytes())));
    	usuario.setDataAtualizacao(this.dataAtualizacao == null ? null : Long.valueOf(new String(Crypto.decrypt(this.dataAtualizacao.toBytes()))));
    	usuario.setDeviceId(this.deviceId == null ? null : Long.valueOf(new String(Crypto.decrypt(this.deviceId.toBytes()))));
    	usuario.setSemClassesAtribuidas(this.semClassesAtribuidas == null ? null : Boolean.valueOf(new String(Crypto.decrypt(this.semClassesAtribuidas.toBytes()))));

		
		return usuario;
    }

}
